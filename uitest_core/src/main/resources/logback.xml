<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <!-- 加载外部配置文件，获取变量，例如下面的 LOG_INFO_HOME -->
    <!-- <property resource="logback.properties"/> -->

    <property name="LOG_INFO_HOME" value="D://logs//info"/>
    <property name="LOG_ERROR_HOME" value="D://logs//error"/>

    <property name="GLOBAL_LOG_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss.SSS} - %c - %5p [%thread] %caller{1} - %m%n%xThrowable{full}"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n</pattern>
        </layout>
    </appender>

    <!--获取比info级别高(包括info级别)但除error级别的日志-->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>${GLOBAL_LOG_PATTERN}</pattern>
        </encoder>

        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${LOG_INFO_HOME}//info.log.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- each archived file, size max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- total size of all archive files, if total size > 1GB, it will delete
                old archived file -->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 60 days to keep -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${GLOBAL_LOG_PATTERN}</pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${LOG_ERROR_HOME}//error.log.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- each archived file, size max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- total size of all archive files, if total size > 1GB, it will delete
                old archived file -->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 60 days to keep -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>

    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC-INFO"/>
        <appender-ref ref="ASYNC-ERROR"/>
    </root>

    <!-- logger name需要和代码中LoggerFactory.getLogger("infoLogger")一致 -->
    <!-- additivity="false"避免重复打日志-->
    <logger name="debugLogger" additivity="false" level="DEBUG">
        <appender-ref ref="CONSOLE"/>
    </logger>

    <logger name="infoLogger" additivity="false" level="INFO">
        <appender-ref ref="INFO-LOG"/>
        <appender-ref ref="CONSOLE"/>
    </logger>

    <logger name="errorLogger" additivity="false" level="ERROR">
        <appender-ref ref="ERROR-LOG"/>
        <appender-ref ref="CONSOLE"/>
    </logger>
</configuration>